#user  nobody;
worker_processes  2;
worker_cpu_affinity 00000001 00000010;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  4096;
    multi_accept off;
    use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile on;
    tcp_nopush off;
    tcp_nodelay on;

    # keepalive_timeout  0;
    keepalive_timeout  10;

    client_max_body_size 20m;
    client_body_buffer_size 128k;

    client_header_timeout 10;
    client_body_timeout 10;
    proxy_buffers 1024 64k;

    send_timeout 5;
    reset_timedout_connection on;

    gzip  on;
    gzip_vary on;
    # gzip_min_length 10k;
    gzip_comp_level 4;
    gzip_types text/plain text/css application/x-javascript application/javascript application/json text/javascript image/png image/jpeg image/gif application/x-www-form-urlencoded;

    lua_package_path /etc/nginx/lua/redis.lua;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream sockets {
        server 127.0.0.1:3000;
    }

    server {
        listen       80;
        server_name  localhost;
        root /var/www;
        # charset koi8-r;

        # access_log  /var/log/nginx/host.access.log  main;

        location / {
            if (!-e $request_filename) {
                rewrite ^(.*)$ /index.php?s=$1 last;
                break;
            }
            index index.php index.html index.htm;
        }
        # System modifications:
        # Enable the stub status module by adding something similar to this
        # to your nginx config
        #

        location /status {
            stub_status on;
            access_log   off;
            allow 127.0.0.1;
            deny all;
        }

        location ~ ^/(fpm_status|ping) {
            fastcgi_pass unix:/var/run/php/php-fpm.sock;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include fastcgi_params;
            allow 127.0.0.1;
            deny all;
        }

        error_page 404 /404.html;
        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root   html;
        }

        location ~ \.php$ {
            # fastcgi_pass   127.0.0.1:9000;
            fastcgi_pass   unix:/var/run/php/php-fpm.sock;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    include servers/*.conf;
    include servers/dev/*.conf;
}
